TW.IDE.Widgets.eventbroadcasting=function(){this.widgetIconUrl=function(){return"../Common/extensions/EventBroadcastingWidget/ui/eventbroadcasting/arrows.png"};this.widgetProperties=function(){return{name:"EventBroadcasting",description:"Widget to generate events to be broadcasted",category:["Common"],iconImage:"arrows.png",properties:{Width:{description:"width",defaultValue:200},Height:{description:"height",defaultValue:28},eventName:{baseType:"STRING",isBindingTarget:!0,description:"The (unique) event name"},
eventParameters:{baseType:"JSON",defaultValue:"{}",description:'The JSON object describing the event parameters having parameter names as key and data type as value; ex. {"minTemp": "STRING"}'},mode:{isBindingTarget:!1,description:"Sender = this widget is an event generator, Receiver = this widget is an event receiver",baseType:"STRING",defaultValue:"sender",selectOptions:[{value:"sender",text:"Sender"},{value:"receiver",text:"Receiver"}]},debugMode:{isVisible:!0,baseType:"BOOLEAN",isEditable:!0,
defaultValue:!1,description:"true to activate the debug"}}}};this.renderHtml=function(){return'<div class="widget-content widget-eventbroadcasting"><span class="eventbroadcasting-property">Event Broadcasting</span></div>'};this.afterRender=function(){this.setProperty("_EventParametersDataShape","{}");this.addNewEventParameters(this.getProperty("eventParameters"),this.getProperty("mode"))};this.afterSetProperty=function(a,b){if("eventParameters"===a||"mode"===a)switch(this.deleteOldEventParameters(),
a){case "eventParameters":""===b?this.resetJSON(a):this.addNewEventParameters(b,this.getProperty("mode"))||(TW.IDE.showStatusText("error","eventParameters: the JSON object is not valid, or one of the parameter names is reserved, or a type other than STRING, INTEGER, NUMBER, DATETIME, BOOLEAN, INFOTABLE has been indicated."),this.resetJSON(a));break;case "mode":this.addNewEventParameters(this.getProperty("eventParameters"),b)||(TW.IDE.showStatusText("error","eventParameters: the JSON object is not valid, or one of the parameter names is reserved, or a type other than STRING, INTEGER, NUMBER, DATETIME, BOOLEAN, INFOTABLE has been indicated."),
this.resetJSON(a))}return!1};this.deleteOldEventParameters=function(){var a=this.allWidgetProperties().properties,b=this.strToJson(this.getProperty("_EventParametersDataShape")),d;for(d in b)delete a[d];delete a.Trigger;delete a.Triggered};this.addNewEventParameters=function(a,b){var d=this.allWidgetProperties().properties;a=this.strToJson(a);var e="STRING INTEGER NUMBER DATETIME BOOLEAN INFOTABLE".split(" "),c;for(c in a)if(a.hasOwnProperty(c)&&d[c]||-1===e.indexOf(a[c]))return this.setProperty("_EventParametersDataShape",
"{}"),!1;for(c in a)d[c]={isBaseProperty:!1,name:c,type:"property",isVisible:!0,isEditable:"sender"===b,isBindingTarget:"sender"===b,isBindingSource:"receiver"===b,baseType:a[c]},"sender"===b&&"STRING"===a[c]&&(d[c].isLocalizable=!0);this.setProperty("_EventParametersDataShape",this.jsonToStr(this.getProperty("eventParameters")));d["sender"===b?"Trigger":"Triggered"]={name:"sender"===b?"Trigger":"Triggered",type:"sender"===b?"service":"event",isVisible:!0};this.updatedProperties({updateUI:!0});return!0};
this.jsonToStr=function(a){a?"string"!==typeof a&&(a=JSON.stringify(a)):a="{}";return a};this.strToJson=function(a){a?"string"===typeof a&&(a=JSON.parse(a)):a={};return a};this.resetJSON=function(a){this.setProperty(a,"{}");TW.IDE.updateWidgetPropertiesWindow()}};